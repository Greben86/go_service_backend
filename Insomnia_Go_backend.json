{"_type":"export","__export_format":4,"__export_date":"2025-05-03T20:05:24.315Z","__export_source":"insomnia.desktop.app:v10.3.1","resources":[{"_id":"req_d69b1281b42049cea03ca2c22775733a","parentId":"fld_e4e9d561addd48c4848bef00da03cec0","modified":1746218964582,"created":1746218102962,"url":"https://www.cbr.ru/DailyInfoWebServ/DailyInfo.asmx","name":"Central Bank Rate","description":"","method":"POST","body":{"mimeType":"application/xml","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n        <soap12:Envelope xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">\n            <soap12:Body>\n                <KeyRate xmlns=\"http://web.cbr.ru/\">\n                    <fromDate>2025-05-02</fromDate>\n                    <ToDate>2025-05-02</ToDate>\n                </KeyRate>\n            </soap12:Body>\n        </soap12:Envelope>"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/soap+xml; charset=utf-8","id":"pair_35c9942a535040a69baabaf7878bc545"},{"name":"User-Agent","value":"insomnia/10.3.1","id":"pair_f9300db60b1240dc8fa2f83b1875c4e9","disabled":true},{"id":"pair_407c1cc6bb874a34ba8618a6982cc6f7","name":"SOAPAction","value":"http://web.cbr.ru/KeyRate","description":"","disabled":false}],"authentication":{},"metaSortKey":-1746218102963,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_e4e9d561addd48c4848bef00da03cec0","parentId":"wrk_scratchpad","modified":1745782306944,"created":1745782306944,"name":"Go project","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1745782306944,"environmentType":"kv","_type":"request_group"},{"_id":"wrk_scratchpad","parentId":null,"modified":1744907803886,"created":1744907803886,"name":"Scratch Pad","description":"","scope":"collection","_type":"workspace"},{"_id":"req_4717e32a6a0a49e0a4b6bd964b7113e4","parentId":"fld_e4e9d561addd48c4848bef00da03cec0","modified":1746302707885,"created":1745787358022,"url":"http://localhost:8080/accounts/add","name":"Add account","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"Name\": \"Зряплатный счет\",\n\t\"Bank\": \"Банк\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{"type":"bearer","token":"{{ _.authToken }}"},"preRequestScript":"const tokenUrl = 'http://localhost:8080/login';\n\n\nconst requestBody = {\n  \"username\": \"Viktor2\",\n  \"password\": \"password123\"\n};\n\n\nconst response = await fetch(tokenUrl, {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(requestBody)\n});\n\nif (response.ok) {\n    const data = await response.json();\n    const token = data.token;\n\n    insomnia.environment.set('authToken', token);\n\n} else {\n    throw new Error('Erro to generate token: ' + response.status);\n}","metaSortKey":-1745787358022,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_4c70db0e0d234b76b37a42670315fa1a","parentId":"fld_e4e9d561addd48c4848bef00da03cec0","modified":1746205691212,"created":1746204857002,"url":"http://localhost:8080/operation/debet","name":"Add operation debet","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"sum_value\": 100.5,\n\t\"account_id\": 3\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{"type":"bearer","token":"{{ _.authToken }}"},"preRequestScript":"const tokenUrl = 'http://localhost:8080/login';\n\n\nconst requestBody = {\n  \"username\": \"Viktor2\",\n  \"password\": \"password123\"\n};\n\n\nconst response = await fetch(tokenUrl, {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(requestBody)\n});\n\nif (response.ok) {\n    const data = await response.json();\n    const token = data.token;\n\n    insomnia.environment.set('authToken', token);\n\n} else {\n    throw new Error('Erro to generate token: ' + response.status);\n}","metaSortKey":-1745787042635.625,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_7b2b46f2786843d2882c7ace016cdbb3","parentId":"fld_e4e9d561addd48c4848bef00da03cec0","modified":1746207209614,"created":1746207164081,"url":"http://localhost:8080/operation/transfer","name":"Add operation transfer","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"account_from\": 4,\n\t\"account_to\": 3,\n\t\"sum_value\": 5000\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{"type":"bearer","token":"{{ _.authToken }}"},"preRequestScript":"const tokenUrl = 'http://localhost:8080/login';\n\n\nconst requestBody = {\n  \"username\": \"Viktor2\",\n  \"password\": \"password123\"\n};\n\n\nconst response = await fetch(tokenUrl, {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(requestBody)\n});\n\nif (response.ok) {\n    const data = await response.json();\n    const token = data.token;\n\n    insomnia.environment.set('authToken', token);\n\n} else {\n    throw new Error('Erro to generate token: ' + response.status);\n}","metaSortKey":-1745786963789.0312,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_db816da44fb34b369c7a1c5f557b9940","parentId":"fld_e4e9d561addd48c4848bef00da03cec0","modified":1746206991110,"created":1746205700763,"url":"http://localhost:8080/operation/credit","name":"Add operation credit","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"sum_value\": 500.5,\n\t\"account_id\": 4\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{"type":"bearer","token":"{{ _.authToken }}"},"preRequestScript":"const tokenUrl = 'http://localhost:8080/login';\n\n\nconst requestBody = {\n  \"username\": \"Viktor2\",\n  \"password\": \"password123\"\n};\n\n\nconst response = await fetch(tokenUrl, {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(requestBody)\n});\n\nif (response.ok) {\n    const data = await response.json();\n    const token = data.token;\n\n    insomnia.environment.set('authToken', token);\n\n} else {\n    throw new Error('Erro to generate token: ' + response.status);\n}","metaSortKey":-1745786884942.4375,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_f65ca5e117fc43f599a8d8f189f4ac2d","parentId":"fld_e4e9d561addd48c4848bef00da03cec0","modified":1746222301221,"created":1746188832997,"url":"http://localhost:8080/cards/add","name":"Add card","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"number\": \"1234567890\",\n\t\"expiration_month\": 4,\n\t\"expiration_year\": 2026,\n\t\"account_id\": 4\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{"type":"bearer","token":"{{ _.authToken }}"},"preRequestScript":"const tokenUrl = 'http://localhost:8080/login';\n\n\nconst requestBody = {\n  \"username\": \"Viktor2\",\n  \"password\": \"password123\"\n};\n\n\nconst response = await fetch(tokenUrl, {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(requestBody)\n});\n\nif (response.ok) {\n    const data = await response.json();\n    const token = data.token;\n\n    insomnia.environment.set('authToken', token);\n\n} else {\n    throw new Error('Erro to generate token: ' + response.status);\n}","metaSortKey":-1745786727249.25,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_cc961a6dfc21497ba3c8e40daf05b345","parentId":"fld_e4e9d561addd48c4848bef00da03cec0","modified":1746225978833,"created":1746220013150,"url":"http://localhost:8080/credits/add","name":"Add credit","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"amount\": 500000,\n\t\"month_count\": 10,\n\t\"account_id\": 3\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{"type":"bearer","token":"{{ _.authToken }}"},"preRequestScript":"const tokenUrl = 'http://localhost:8080/login';\n\n\nconst requestBody = {\n  \"username\": \"Viktor2\",\n  \"password\": \"password123\"\n};\n\n\nconst response = await fetch(tokenUrl, {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(requestBody)\n});\n\nif (response.ok) {\n    const data = await response.json();\n    const token = data.token;\n\n    insomnia.environment.set('authToken', token);\n\n} else {\n    throw new Error('Erro to generate token: ' + response.status);\n}","metaSortKey":-1745786411862.875,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_9ca930c07c0e4d46ada1334ef82618a2","parentId":"fld_e4e9d561addd48c4848bef00da03cec0","modified":1746136182276,"created":1746136168587,"url":"http://localhost:8080/accounts/all","name":"All accounts","description":"","method":"GET","body":{},"parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{"type":"bearer","token":"{{ _.authToken }}"},"preRequestScript":"const tokenUrl = 'http://localhost:8080/login';\n\n\nconst requestBody = {\n  \"username\": \"Viktor2\",\n  \"password\": \"password123\"\n};\n\n\nconst response = await fetch(tokenUrl, {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(requestBody)\n});\n\nif (response.ok) {\n    const data = await response.json();\n    const token = data.token;\n\n    insomnia.environment.set('authToken', token);\n\n} else {\n    throw new Error('Erro to generate token: ' + response.status);\n}","metaSortKey":-1745786096476.5,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_7307cd814c1d4639b71f7c03481670de","parentId":"fld_e4e9d561addd48c4848bef00da03cec0","modified":1746207008345,"created":1746206371311,"url":"http://localhost:8080/operation/4/all","name":"All operations","description":"","method":"GET","body":{},"parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{"type":"bearer","token":"{{ _.authToken }}"},"preRequestScript":"const tokenUrl = 'http://localhost:8080/login';\n\n\nconst requestBody = {\n  \"username\": \"Viktor2\",\n  \"password\": \"password123\"\n};\n\n\nconst response = await fetch(tokenUrl, {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(requestBody)\n});\n\nif (response.ok) {\n    const data = await response.json();\n    const token = data.token;\n\n    insomnia.environment.set('authToken', token);\n\n} else {\n    throw new Error('Erro to generate token: ' + response.status);\n}","metaSortKey":-1745785938783.3125,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_df992f3ed92d4aec9101c5a3699ca9b1","parentId":"fld_e4e9d561addd48c4848bef00da03cec0","modified":1746189128176,"created":1746189093789,"url":"http://localhost:8080/cards/all","name":"All cards","description":"","method":"GET","body":{},"parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{"type":"bearer","token":"{{ _.authToken }}"},"preRequestScript":"const tokenUrl = 'http://localhost:8080/login';\n\n\nconst requestBody = {\n  \"username\": \"Viktor2\",\n  \"password\": \"password123\"\n};\n\n\nconst response = await fetch(tokenUrl, {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(requestBody)\n});\n\nif (response.ok) {\n    const data = await response.json();\n    const token = data.token;\n\n    insomnia.environment.set('authToken', token);\n\n} else {\n    throw new Error('Erro to generate token: ' + response.status);\n}","metaSortKey":-1745785781090.125,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_e3610a4ec20840c1a11b8f817d06bf18","parentId":"fld_e4e9d561addd48c4848bef00da03cec0","modified":1746220608259,"created":1746220379526,"url":"http://localhost:8080/credits/all","name":"All credits","description":"","method":"GET","body":{},"parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{"type":"bearer","token":"{{ _.authToken }}"},"preRequestScript":"const tokenUrl = 'http://localhost:8080/login';\n\n\nconst requestBody = {\n  \"username\": \"Viktor2\",\n  \"password\": \"password123\"\n};\n\n\nconst response = await fetch(tokenUrl, {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(requestBody)\n});\n\nif (response.ok) {\n    const data = await response.json();\n    const token = data.token;\n\n    insomnia.environment.set('authToken', token);\n\n} else {\n    throw new Error('Erro to generate token: ' + response.status);\n}","metaSortKey":-1745785623396.9375,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_2713998246584b90a7a0f9ee623060a1","parentId":"fld_e4e9d561addd48c4848bef00da03cec0","modified":1746138220926,"created":1746136294800,"url":"http://localhost:8080/accounts/6/get","name":"Get account","description":"","method":"GET","body":{},"parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{"type":"bearer","token":"{{ _.authToken }}"},"preRequestScript":"const tokenUrl = 'http://localhost:8080/login';\n\n\nconst requestBody = {\n  \"username\": \"Viktor2\",\n  \"password\": \"password123\"\n};\n\n\nconst response = await fetch(tokenUrl, {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(requestBody)\n});\n\nif (response.ok) {\n    const data = await response.json();\n    const token = data.token;\n\n    insomnia.environment.set('authToken', token);\n\n} else {\n    throw new Error('Erro to generate token: ' + response.status);\n}","metaSortKey":-1745785465703.75,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_8bfc4938488142c58658106d2a6f0e5e","parentId":"fld_e4e9d561addd48c4848bef00da03cec0","modified":1746285873096,"created":1746285858080,"url":"http://localhost:8080/cards/1/get","name":"Get card","description":"","method":"GET","body":{},"parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{"type":"bearer","token":"{{ _.authToken }}"},"preRequestScript":"const tokenUrl = 'http://localhost:8080/login';\n\n\nconst requestBody = {\n  \"username\": \"Viktor2\",\n  \"password\": \"password123\"\n};\n\n\nconst response = await fetch(tokenUrl, {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(requestBody)\n});\n\nif (response.ok) {\n    const data = await response.json();\n    const token = data.token;\n\n    insomnia.environment.set('authToken', token);\n\n} else {\n    throw new Error('Erro to generate token: ' + response.status);\n}","metaSortKey":-1745785308010.5625,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_e365d596d753477e9a8e35f8c0ecec65","parentId":"fld_e4e9d561addd48c4848bef00da03cec0","modified":1746226368068,"created":1746226340016,"url":"http://localhost:8080/credits/4/schedule","name":"Get payment_schedule","description":"","method":"GET","body":{},"parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{"type":"bearer","token":"{{ _.authToken }}"},"preRequestScript":"const tokenUrl = 'http://localhost:8080/login';\n\n\nconst requestBody = {\n  \"username\": \"Viktor2\",\n  \"password\": \"password123\"\n};\n\n\nconst response = await fetch(tokenUrl, {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(requestBody)\n});\n\nif (response.ok) {\n    const data = await response.json();\n    const token = data.token;\n\n    insomnia.environment.set('authToken', token);\n\n} else {\n    throw new Error('Erro to generate token: ' + response.status);\n}","metaSortKey":-1745785150317.375,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_838ba4a9239b46dd8ddcfdc4525d79e0","parentId":"fld_e4e9d561addd48c4848bef00da03cec0","modified":1746267889982,"created":1746267867477,"url":"http://localhost:8080/accounts/4/predict","name":"Get predict account","description":"","method":"GET","body":{},"parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{"type":"bearer","token":"{{ _.authToken }}"},"preRequestScript":"const tokenUrl = 'http://localhost:8080/login';\n\n\nconst requestBody = {\n  \"username\": \"Viktor2\",\n  \"password\": \"password123\"\n};\n\n\nconst response = await fetch(tokenUrl, {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(requestBody)\n});\n\nif (response.ok) {\n    const data = await response.json();\n    const token = data.token;\n\n    insomnia.environment.set('authToken', token);\n\n} else {\n    throw new Error('Erro to generate token: ' + response.status);\n}","metaSortKey":-1745784992624.1875,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_86899e3b473a4fcea9f3c3cbf8d84f34","parentId":"fld_e4e9d561addd48c4848bef00da03cec0","modified":1746269515717,"created":1746269501917,"url":"http://localhost:8080/analytics","name":"Get analitics","description":"","method":"GET","body":{},"parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{"type":"bearer","token":"{{ _.authToken }}"},"preRequestScript":"const tokenUrl = 'http://localhost:8080/login';\n\n\nconst requestBody = {\n  \"username\": \"Viktor2\",\n  \"password\": \"password123\"\n};\n\n\nconst response = await fetch(tokenUrl, {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(requestBody)\n});\n\nif (response.ok) {\n    const data = await response.json();\n    const token = data.token;\n\n    insomnia.environment.set('authToken', token);\n\n} else {\n    throw new Error('Erro to generate token: ' + response.status);\n}","metaSortKey":-1745784913777.5938,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_b138cd12f30c4554a936b5827c8feac0","parentId":"fld_e4e9d561addd48c4848bef00da03cec0","modified":1746099288064,"created":1746098800750,"url":"http://localhost:8080/health","name":"Get Health","description":"","method":"GET","body":{},"parameters":[],"headers":[{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{"type":"none"},"preRequestScript":"","metaSortKey":-1745784834931,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_9df1cfd081614c438f045ebbe3267b68","parentId":"fld_e4e9d561addd48c4848bef00da03cec0","modified":1746126768708,"created":1745782311840,"url":"http://localhost:8080/register","name":"Register","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"username\": \"Viktor2\",\n  \"password\": \"password123\",\n\t\"email\": \"grebenvictoryandex.ru\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{},"metaSortKey":-1745782311840,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_de674558eebf4ee8af94071294c53b21","parentId":"fld_e4e9d561addd48c4848bef00da03cec0","modified":1746126761100,"created":1745787277314,"url":"http://localhost:8080/login","name":"Login","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"username\": \"Viktor2\",\n  \"password\": \"password123\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"},{"name":"User-Agent","value":"insomnia/10.3.1"}],"authentication":{},"metaSortKey":-1745525431330.5,"isPrivate":false,"pathParameters":[],"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"env_99d30891da4bdcebc63947a8fc17f076de878684","parentId":"wrk_scratchpad","modified":1746302679175,"created":1744907834879,"name":"Base Environment","data":{"authToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NDYzODkwNzksImlhdCI6MTc0NjMwMjY3OSwianRpIjoiMyJ9.ryBxO0z_DEV2cUlkaxXK_7XP0xNtUa4NS9e86QfBC54"},"dataPropertyOrder":{"&":["authToken"]},"color":null,"isPrivate":false,"metaSortKey":1744907834879,"environmentType":"kv","_type":"environment"},{"_id":"jar_99d30891da4bdcebc63947a8fc17f076de878684","parentId":"wrk_scratchpad","modified":1746302679174,"created":1744907834973,"name":"Default Jar","cookies":[{"id":"43799097-3db4-477e-874c-0f2ffd4c8d48","key":"__ddg8_","value":"Cme2Pvw54boGwabM","expires":"2025-05-03T11:30:19.000Z","domain":"cbr.ru","path":"/","secure":false,"httpOnly":false,"extensions":[],"creation":"2025-05-02T20:35:11.386Z","lastAccessed":"2025-05-03T11:10:19.758Z"},{"id":"9e7ade51-de42-479b-8e58-7429535b0419","key":"__ddg10_","value":"1746270619","expires":"2025-05-03T11:30:19.000Z","domain":"cbr.ru","path":"/","secure":false,"httpOnly":false,"extensions":[],"creation":"2025-05-02T20:35:11.390Z","lastAccessed":"2025-05-03T11:10:19.765Z"},{"id":"8c27ff2c-807b-428e-8105-e4a2e5d78927","key":"__ddg9_","value":"176.213.11.55","expires":"2025-05-03T11:30:19.000Z","domain":"cbr.ru","path":"/","secure":false,"httpOnly":false,"extensions":[],"creation":"2025-05-02T20:35:11.391Z","lastAccessed":"2025-05-03T11:10:19.767Z"},{"id":"94dd9764-e40e-4b3b-9593-249190e424e4","key":"__ddg1_","value":"PNZn7P6sI0SNp64mih5v","expires":"2026-05-02T20:35:11.000Z","domain":"cbr.ru","path":"/","secure":false,"httpOnly":true,"extensions":[],"creation":"2025-05-02T20:35:11.391Z","lastAccessed":"2025-05-02T20:35:11.391Z"}],"_type":"cookie_jar"}]}